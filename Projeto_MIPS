#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#------------------------- TRABALHO DE ORGANIZAÇÃO DE COMPUTADORES -----------------------------------------------
#----------------------------- PUC MINAS POÇOS DE CALDAS - MG ----------------------------------------------------
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#
#<-<-<-<-<-<-<-<-<-<-<-< Criado por Maycon Ricardo Oliveira / Jean Rabelo Borges ->->->->->->->->->->->->->->
#
#
#
#************************************  JOQUEMPO 1.1 ****************************************************
#
#  

.data
	
	msg: .asciiz "BEM VINDO AO JOQUEMPO"
	msg_INSTRUCOES: .asciiz "\n1. PEDRA	2. PAPEL	3. TESOURA\n\n"
	msgempate: .asciiz "\n	EMPATE"
	jogador1: .asciiz "Primeiro Jogador: "
 	jogador2: .asciiz "Segundo Jogador: "
 	vencedor1: .asciiz "\n\n Primeiro Jogador venceu o jogo !!!!!!"
 	vencedor2: .asciiz "\n\n Segundo Jogador venceu o jogo !!!!!!"
 	jog1: .ascii "Primeiro jogador venceu a rodada."
 	jog2: .ascii "Segundo jogador venceu a rodada."
.text
.globl main JOGO _PEDRA _PAPEL _TESOURA _EMPATE _VENCEDOR1 _VENCEDOR2 _FIM1 _FIM2 _FIM_JOGO

main:   

	li $v0, 4			# printa Inicio
	la $a0, msg
	syscall 
	
			#-------------------------  Iniciando o jogo  -----------------------------#
	
	JOGO:
		li $v0, 4			# printa as instruções do jogo
		la $a0, msg_INSTRUCOES
		syscall 
		
		li $v0, 4			#Print jogador1
		la $a0, jogador1
		syscall 
	
		li $v0, 5  			#chamar teclado
		syscall
		la $s0,($v0) 			#coloca o valor em s0 do jogador 1
	
	
	
		li $v0, 4			#Print jogador2
		la $a0, jogador2
		syscall 
	
		li $v0, 5			#chamar teclado
		syscall
		la $s4,($v0)			#coloca o valor em s4 do jogador 2
	
	
		la $s1,1($t8) 			#coloca o valor em s1
		la $s2,2($t8) 			#coloca o valor em s2
		la $s3,3($t8) 			#coloca o valor em s3
	
		#s0 = jogador 1
		#s4 = jogador 2
		#s1 = 1
		#s2 = 2
		#s3 = 3
	

	#--------------------------  Veriificações de Vencedor ------------------------

	
	beq $s0, $s4, _EMPATE			# Se o jogador 1 for igual ao jogador 2
	beq $s0, $s3, _TESOURA			# Se o jogador 1 for tesoura
	beq $s0, $s2, _PAPEL			# Se o jogador 1 for papel
	beq $s0, $s1, _PEDRA			# Se o jogador 1 for pedra
	
	
	_PEDRA:
		beq $s4, $s3,  _VENCEDOR1			#pedra x tesoura
		beq $s4, $s2,  _VENCEDOR2			#pedra x papel

	_PAPEL:
		beq $s4, $s1, _VENCEDOR1			#papel x pedra
		beq $s4, $s3, _VENCEDOR2			#papel x tesoura
	
	_TESOURA:
		beq $s4, $s1, _VENCEDOR2			#tesoura x pedra
		beq $s4, $s2, _VENCEDOR1			#tesoura x papel
		
	_EMPATE:
		li $v0, 4			# Empate e volta ao main
		la $a0, msgempate
		syscall		
		j JOGO
		
	
	#---------------------------	LOOP DE 3 RODADAS -------------------------------
	
	#	** s5 = jogador 1		** s6 = jogador 2
	
	_VENCEDOR1:
		  add $s5, $s5, 1		# soma s5 + 1 
		  bne $s5, 7, JOGO
		  beq $s5, 7, _FIM1

	_VENCEDOR2:
		  add $s6, $s6, 1		# soma s6 + 1 
		  beq $s6, 7, _FIM2
		  bne $s6, 7, JOGO  
		  
	_FIM1:
		li $v0, 4		#Print final para jogador 1 
		la $a0, vencedor1
		syscall 
		j _FIM_JOGO
	
	_FIM2:
		li $v0, 4		#Print final para jogador 2 
		la $a0, vencedor2
		syscall 
		j _FIM_JOGO
	
	
	_FIM_JOGO:
